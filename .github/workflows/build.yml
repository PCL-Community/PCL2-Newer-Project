name: Minimal Source Build

on:
  push:
    branches: [main]

jobs:
  generate-and-build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Initialize Project
        run: flutter create --platforms=windows,macos,linux --no-overwrite .
      - name: Start Build
        run: |
          flutter pub get
          if ("${{ runner.os }}" -eq "Linux") {
            sudo apt-get update -y
            sudo apt-get install -y ninja-build libgtk-3-dev
            flutter build linux --release
          } elseif ("${{ runner.os }}" -eq "macOS") {
            # rm ./macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png
            # rm ./macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png
            # rm ./macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png
            # rm ./macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png
            # rm ./macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png
            # rm ./macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png
            # rm ./macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png
            cp ./assets/app_icon_16.png ./macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png
            cp ./assets/app_icon_32.png ./macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png
            cp ./assets/app_icon_64.png ./macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png
            cp ./assets/app_icon_128.png ./macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png
            cp ./assets/app_icon_256.png ./macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png
            cp ./assets/app_icon_512.png ./macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png
            cp ./assets/app_icon_1024.png ./macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png
            flutter build macos --release
          } else {
            copy ./assets/app_icon.ico ./windows/runner/resources/app_icon.ico
            flutter build windows --release
          }
        shell: pwsh
      - name: Zip all releases
        run: |
          mkdir releases
          if ("${{ runner.os }}" -eq "Linux") {
            cd build/linux/x64/release/bundle
            zip -9 -r "../../../../../releases/PCL-Newer-Project-Linux.zip" .
          } elseif ("${{ runner.os }}" -eq "macOS") {
            cd build/macos/Build/Products/Release
            zip -9 -r "../../../../../releases/PCL-Newer-Project-macOS.zip" .
          } else {
            cd build/windows/x64/runner/Release
            7z a "../../../../../releases/PCL-Newer-Project-Windows.zip" ./*
          }
        shell: pwsh
      - name: Upload all Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-bundle
          path: ./releases/PCL-Newer-Project-${{ runner.os }}.zip